import { IsNotEmpty, IsString, MaxLength } from 'class-validator';
import { ClassValidatorFields } from '@/shared/domain/entities/validators/class-validator-fields';
import { {{pascalCase name}}Props } from '@/{{dashCase name}}/domain/entities/{{dashCase name}}.entity';

class {{pascalCase name}}Rules {
  @MaxLength(255)
  @IsString()
  @IsNotEmpty()
  name: string;

  @MaxLength(255)
  @IsNotEmpty()
  @IsString()
  code: string;

  constructor(data: {{pascalCase name}}Props) {
    this.name = data.name;
    this.code = data.code;
  }
}

export class {{pascalCase name}}Validator extends ClassValidatorFields<{{pascalCase name}}Rules> {
  validate(data: {{pascalCase name}}Props): boolean {
    return super.validate(new {{pascalCase name}}Rules(data));
  }
}

export class {{pascalCase name}}ValidatorFactory {
  static create(): {{pascalCase name}}Validator {
    return new {{pascalCase name}}Validator();
  }
}
